[["Map",1,2,9,10,104,105],"meta::meta",["Map",3,4,5,6,7,8],"astro-version","5.13.7","content-config-digest","322ff9e12e7dc060","astro-config-digest","{\"root\":{},\"srcDir\":{},\"publicDir\":{},\"outDir\":{},\"cacheDir\":{},\"site\":\"https://sofikung.com\",\"compressHTML\":true,\"base\":\"/\",\"trailingSlash\":\"ignore\",\"output\":\"static\",\"scopedStyleStrategy\":\"attribute\",\"build\":{\"format\":\"directory\",\"client\":{},\"server\":{},\"assets\":\"_astro\",\"serverEntry\":\"entry.mjs\",\"redirects\":true,\"inlineStylesheets\":\"auto\",\"concurrency\":1},\"server\":{\"open\":false,\"host\":false,\"port\":4321,\"streaming\":true,\"allowedHosts\":[]},\"redirects\":{},\"image\":{\"endpoint\":{\"route\":\"/_image\"},\"service\":{\"entrypoint\":\"astro/assets/services/sharp\",\"config\":{}},\"domains\":[],\"remotePatterns\":[],\"responsiveStyles\":false},\"devToolbar\":{\"enabled\":true},\"markdown\":{\"syntaxHighlight\":{\"type\":\"shiki\",\"excludeLangs\":[\"math\"]},\"shikiConfig\":{\"langs\":[],\"langAlias\":{},\"theme\":\"github-dark\",\"themes\":{},\"wrap\":false,\"transformers\":[]},\"remarkPlugins\":[],\"rehypePlugins\":[],\"remarkRehype\":{},\"gfm\":true,\"smartypants\":true},\"security\":{\"checkOrigin\":true},\"env\":{\"schema\":{},\"validateSecrets\":false},\"experimental\":{\"clientPrerender\":false,\"contentIntellisense\":false,\"headingIdCompat\":false,\"preserveScriptOrder\":false,\"liveContentCollections\":false,\"csp\":false,\"staticImportMetaEnv\":false,\"chromeDevtoolsWorkspace\":false},\"legacy\":{\"collections\":false}}","posts",["Map",11,12,36,37],"prompt-engineering",{"id":11,"data":13,"body":23,"filePath":24,"digest":25,"rendered":26,"legacyId":35},{"title":14,"date":15,"date_pretty":16,"description":17,"seo":18,"type":21,"tags":22},"Notes on prompt engineering","2025-09-08","Sep 8, 2025"," My cheatsheet on prompt engineering from Google's whitepaper",{"keywords":19},[20],"Coming soon","post",[20],"\u003C!-- Optional markdown content can go here. -->","src/content/posts/prompt-engineering.md","b0775dc717eb89c8",{"html":23,"metadata":27},{"headings":28,"localImagePaths":29,"remoteImagePaths":30,"frontmatter":31,"imagePaths":34},[],[],[],{"title":14,"slug":11,"date":15,"date_pretty":16,"description":17,"type":21,"tags":32,"seo":33},[20],{"keywords":19},[],"prompt-engineering.md","vibe-coding-portfolio",{"id":36,"data":38,"body":52,"filePath":53,"digest":54,"rendered":55,"legacyId":103},{"title":39,"date":40,"date_pretty":41,"description":42,"seo":43,"type":21,"tags":49},"What I Learned Vibe Coding My Portfolio in 4 Days","2025-09-20","Sep 20, 2025","Lessons on taste, prompting, frameworks, and building a portfolio website with Codex",{"keywords":44},[45,46,47,48],"AI portfolio building","prompt engineering","vibe coding","Astro framework",[50,51],"Vibe Coding","Prompting","## The Discovery Process: Learning What to Ask\n\nI started building with a Wix resume template as inspiration, asking LLM questions as I went. While this iterative approach worked, I only realized what I truly wanted to build after several rounds of implementation.\n\nThe process taught me something valuable: I should have first considered which framework, design principles and content management strategy to adopt.\n\nWhen I realized that I needed markdown support for blog posts, I had to migrate frameworks—not because I didn't plan, but because I didn't know the right questions to ask initially.\n\n## Lesson 1: AI Can't Give You Taste (And That's Your Advantage)\n\nI built my entire first draft before seeking feedback. My software engineer friends delivered the verdict: \"This looks like a resume. You might as well not build one.\"\n\nThey followed up with portfolio references that worked—minimalistic, functional designs that matched my goals. After studying these examples, I wasted another day to rebuild the entire homepage.\n\n**Questions to ask on Design & Taste**\n\n- What 3 websites do I want mine to look and feel like?\n- What specific features do I love? (Navigation, color schemes, layout, animations)\n- What’s the main thing I want visitors to do? (Contact me, view my work, read my writing)\n\n## Lesson 2: Industrial Standards Require Explicit Specification\n\nLLMs build like enthusiastic juniors—functional but lacking production standards. They won't automatically include:\n\n- CSS variables for consistent styling\n- Mobile responsiveness\n- Clean code architecture\n- Comprehensive README\n\n**Key learning:** Ask for all of the above explicitly.\n\n## Lesson 3: Prompting Tools and Techniques That Worked for Me\n\nI started with Claude, hit rate limits, then switched to Codex (ChatGPT Plus). But real progress came when I switched from terminal-based prompting to IDE plugin integration.\n\nThe VS Code plugin was easy to use—it allowed me to upload reference images easily, reviewing conversation history was seamless, and iterating on code became efficient.\n\nI also discovered that:\n\n- **Screenshot-to-code translation**: Codex could convert UI screenshots into functional code with ~80% accuracy.\n- **Debugging specificity**: Basic HTML/CSS knowledge helped me give precise feedback.\n- **Planning vs. agent mode**: Define requirements in planning mode before implementing in agent mode to prevent unnecessary rework.\n\n## Lesson 4: The Main Purpose of the Website Shapes Your Technical Architecture\n\nMy portfolio's core function is showcasing projects and writing, hence my friend suggested GitHub markdown as it is easy to maintain and straightforward.\n\nThe issue was that my vanilla HTML/CSS architecture couldn't handle markdown gracefully. Every new post triggered layout bugs.\n\nI learned that the type of website you are building directly influences your technical stack. This should be among the first questions to ask at the beginning.\n\nThis led me to discover Astro framework, which excels at markdown-based sites with native support, file-based routing, and optimized static generation. The framework choice should align with your content strategy, not the other way around.\n\n## Additional Learnings\n\nBuilding this project taught me topics beyond my existing web development knowledge:\n\n- **Version control fluency**: Writing meaningful commit messages and revisiting Git workflows\n- **Deployment processes**: Learning Astro-specific deployment patterns and hosting considerations\n- **CMS ecosystem knowledge**: Understanding the spectrum from file-based to headless CMS solutions\n\n## The Questions I Wish I'd Asked First\n\nBased on this experience, here are the essential questions to ask beforehand:\n\n### Design & Vision\n\n- What 3 websites do I want mine to look and feel like?\n- What specific features do I love? (Navigation, color schemes, layout, animations)\n- What's the main thing I want visitors to do? (Contact me, view my work, read my writing)\n\n### Content Strategy\n\n- **Update frequency affects framework choice**:\n  - Daily/weekly → fast and simple (Astro with markdown)\n  - Monthly → static generation is fine\n- **Update method determines tech stack**:\n  - Markdown → Astro, Next.js\n  - JSON → Static generators\n  - CMS → Headless CMS + framework\n- **Visitor interaction needs shape hosting**:\n  - None → Static hosting (GitHub Pages, Netlify)\n  - Comments/forms → Backend services or integrations\n  - Accounts → Database + auth system\n\n### Technical Foundation\n\n- Do I want a simple blog, a portfolio showcase, or something more complex?\n- Where will I host this? (GitHub, Vercel, etc.)\n- How will I handle version control? (GitHub Desktop, Git basics)\n\n### Quality Standards\n\n- What are the key steps to ensure good code? (Fast loading, responsive, clean code)\n\n## Reflection\n\nWorking on this vibe coding project was incredibly rewarding. While some rework was inevitable, the learning made it worthwhile. I hope this framework helps you build faster and more intentionally on your next project.\n\nHappy building!","src/content/posts/vibe-coding.md","ed3a26e138173f21",{"html":56,"metadata":57},"\u003Ch2 id=\"the-discovery-process-learning-what-to-ask\">The Discovery Process: Learning What to Ask\u003C/h2>\n\u003Cp>I started building with a Wix resume template as inspiration, asking LLM questions as I went. While this iterative approach worked, I only realized what I truly wanted to build after several rounds of implementation.\u003C/p>\n\u003Cp>The process taught me something valuable: I should have first considered which framework, design principles and content management strategy to adopt.\u003C/p>\n\u003Cp>When I realized that I needed markdown support for blog posts, I had to migrate frameworks—not because I didn’t plan, but because I didn’t know the right questions to ask initially.\u003C/p>\n\u003Ch2 id=\"lesson-1-ai-cant-give-you-taste-and-thats-your-advantage\">Lesson 1: AI Can’t Give You Taste (And That’s Your Advantage)\u003C/h2>\n\u003Cp>I built my entire first draft before seeking feedback. My software engineer friends delivered the verdict: “This looks like a resume. You might as well not build one.”\u003C/p>\n\u003Cp>They followed up with portfolio references that worked—minimalistic, functional designs that matched my goals. After studying these examples, I wasted another day to rebuild the entire homepage.\u003C/p>\n\u003Cp>\u003Cstrong>Questions to ask on Design &#x26; Taste\u003C/strong>\u003C/p>\n\u003Cul>\n\u003Cli>What 3 websites do I want mine to look and feel like?\u003C/li>\n\u003Cli>What specific features do I love? (Navigation, color schemes, layout, animations)\u003C/li>\n\u003Cli>What’s the main thing I want visitors to do? (Contact me, view my work, read my writing)\u003C/li>\n\u003C/ul>\n\u003Ch2 id=\"lesson-2-industrial-standards-require-explicit-specification\">Lesson 2: Industrial Standards Require Explicit Specification\u003C/h2>\n\u003Cp>LLMs build like enthusiastic juniors—functional but lacking production standards. They won’t automatically include:\u003C/p>\n\u003Cul>\n\u003Cli>CSS variables for consistent styling\u003C/li>\n\u003Cli>Mobile responsiveness\u003C/li>\n\u003Cli>Clean code architecture\u003C/li>\n\u003Cli>Comprehensive README\u003C/li>\n\u003C/ul>\n\u003Cp>\u003Cstrong>Key learning:\u003C/strong> Ask for all of the above explicitly.\u003C/p>\n\u003Ch2 id=\"lesson-3-prompting-tools-and-techniques-that-worked-for-me\">Lesson 3: Prompting Tools and Techniques That Worked for Me\u003C/h2>\n\u003Cp>I started with Claude, hit rate limits, then switched to Codex (ChatGPT Plus). But real progress came when I switched from terminal-based prompting to IDE plugin integration.\u003C/p>\n\u003Cp>The VS Code plugin was easy to use—it allowed me to upload reference images easily, reviewing conversation history was seamless, and iterating on code became efficient.\u003C/p>\n\u003Cp>I also discovered that:\u003C/p>\n\u003Cul>\n\u003Cli>\u003Cstrong>Screenshot-to-code translation\u003C/strong>: Codex could convert UI screenshots into functional code with ~80% accuracy.\u003C/li>\n\u003Cli>\u003Cstrong>Debugging specificity\u003C/strong>: Basic HTML/CSS knowledge helped me give precise feedback.\u003C/li>\n\u003Cli>\u003Cstrong>Planning vs. agent mode\u003C/strong>: Define requirements in planning mode before implementing in agent mode to prevent unnecessary rework.\u003C/li>\n\u003C/ul>\n\u003Ch2 id=\"lesson-4-the-main-purpose-of-the-website-shapes-your-technical-architecture\">Lesson 4: The Main Purpose of the Website Shapes Your Technical Architecture\u003C/h2>\n\u003Cp>My portfolio’s core function is showcasing projects and writing, hence my friend suggested GitHub markdown as it is easy to maintain and straightforward.\u003C/p>\n\u003Cp>The issue was that my vanilla HTML/CSS architecture couldn’t handle markdown gracefully. Every new post triggered layout bugs.\u003C/p>\n\u003Cp>I learned that the type of website you are building directly influences your technical stack. This should be among the first questions to ask at the beginning.\u003C/p>\n\u003Cp>This led me to discover Astro framework, which excels at markdown-based sites with native support, file-based routing, and optimized static generation. The framework choice should align with your content strategy, not the other way around.\u003C/p>\n\u003Ch2 id=\"additional-learnings\">Additional Learnings\u003C/h2>\n\u003Cp>Building this project taught me topics beyond my existing web development knowledge:\u003C/p>\n\u003Cul>\n\u003Cli>\u003Cstrong>Version control fluency\u003C/strong>: Writing meaningful commit messages and revisiting Git workflows\u003C/li>\n\u003Cli>\u003Cstrong>Deployment processes\u003C/strong>: Learning Astro-specific deployment patterns and hosting considerations\u003C/li>\n\u003Cli>\u003Cstrong>CMS ecosystem knowledge\u003C/strong>: Understanding the spectrum from file-based to headless CMS solutions\u003C/li>\n\u003C/ul>\n\u003Ch2 id=\"the-questions-i-wish-id-asked-first\">The Questions I Wish I’d Asked First\u003C/h2>\n\u003Cp>Based on this experience, here are the essential questions to ask beforehand:\u003C/p>\n\u003Ch3 id=\"design--vision\">Design &#x26; Vision\u003C/h3>\n\u003Cul>\n\u003Cli>What 3 websites do I want mine to look and feel like?\u003C/li>\n\u003Cli>What specific features do I love? (Navigation, color schemes, layout, animations)\u003C/li>\n\u003Cli>What’s the main thing I want visitors to do? (Contact me, view my work, read my writing)\u003C/li>\n\u003C/ul>\n\u003Ch3 id=\"content-strategy\">Content Strategy\u003C/h3>\n\u003Cul>\n\u003Cli>\u003Cstrong>Update frequency affects framework choice\u003C/strong>:\n\u003Cul>\n\u003Cli>Daily/weekly → fast and simple (Astro with markdown)\u003C/li>\n\u003Cli>Monthly → static generation is fine\u003C/li>\n\u003C/ul>\n\u003C/li>\n\u003Cli>\u003Cstrong>Update method determines tech stack\u003C/strong>:\n\u003Cul>\n\u003Cli>Markdown → Astro, Next.js\u003C/li>\n\u003Cli>JSON → Static generators\u003C/li>\n\u003Cli>CMS → Headless CMS + framework\u003C/li>\n\u003C/ul>\n\u003C/li>\n\u003Cli>\u003Cstrong>Visitor interaction needs shape hosting\u003C/strong>:\n\u003Cul>\n\u003Cli>None → Static hosting (GitHub Pages, Netlify)\u003C/li>\n\u003Cli>Comments/forms → Backend services or integrations\u003C/li>\n\u003Cli>Accounts → Database + auth system\u003C/li>\n\u003C/ul>\n\u003C/li>\n\u003C/ul>\n\u003Ch3 id=\"technical-foundation\">Technical Foundation\u003C/h3>\n\u003Cul>\n\u003Cli>Do I want a simple blog, a portfolio showcase, or something more complex?\u003C/li>\n\u003Cli>Where will I host this? (GitHub, Vercel, etc.)\u003C/li>\n\u003Cli>How will I handle version control? (GitHub Desktop, Git basics)\u003C/li>\n\u003C/ul>\n\u003Ch3 id=\"quality-standards\">Quality Standards\u003C/h3>\n\u003Cul>\n\u003Cli>What are the key steps to ensure good code? (Fast loading, responsive, clean code)\u003C/li>\n\u003C/ul>\n\u003Ch2 id=\"reflection\">Reflection\u003C/h2>\n\u003Cp>Working on this vibe coding project was incredibly rewarding. While some rework was inevitable, the learning made it worthwhile. I hope this framework helps you build faster and more intentionally on your next project.\u003C/p>\n\u003Cp>Happy building!\u003C/p>",{"headings":58,"localImagePaths":97,"remoteImagePaths":98,"frontmatter":99,"imagePaths":102},[59,63,66,69,72,75,78,81,85,88,91,94],{"depth":60,"slug":61,"text":62},2,"the-discovery-process-learning-what-to-ask","The Discovery Process: Learning What to Ask",{"depth":60,"slug":64,"text":65},"lesson-1-ai-cant-give-you-taste-and-thats-your-advantage","Lesson 1: AI Can’t Give You Taste (And That’s Your Advantage)",{"depth":60,"slug":67,"text":68},"lesson-2-industrial-standards-require-explicit-specification","Lesson 2: Industrial Standards Require Explicit Specification",{"depth":60,"slug":70,"text":71},"lesson-3-prompting-tools-and-techniques-that-worked-for-me","Lesson 3: Prompting Tools and Techniques That Worked for Me",{"depth":60,"slug":73,"text":74},"lesson-4-the-main-purpose-of-the-website-shapes-your-technical-architecture","Lesson 4: The Main Purpose of the Website Shapes Your Technical Architecture",{"depth":60,"slug":76,"text":77},"additional-learnings","Additional Learnings",{"depth":60,"slug":79,"text":80},"the-questions-i-wish-id-asked-first","The Questions I Wish I’d Asked First",{"depth":82,"slug":83,"text":84},3,"design--vision","Design & Vision",{"depth":82,"slug":86,"text":87},"content-strategy","Content Strategy",{"depth":82,"slug":89,"text":90},"technical-foundation","Technical Foundation",{"depth":82,"slug":92,"text":93},"quality-standards","Quality Standards",{"depth":60,"slug":95,"text":96},"reflection","Reflection",[],[],{"title":39,"slug":36,"date":40,"date_pretty":41,"description":42,"type":21,"tags":100,"seo":101},[50,51],{"keywords":44},[],"vibe-coding.md","projects",["Map",106,107,138,139,169,170,246,247],"visualise-air-quality",{"id":106,"data":108,"body":23,"filePath":124,"digest":125,"rendered":126,"legacyId":137},{"title":109,"date":110,"date_pretty":111,"description":112,"external_link":113,"hero":114,"seo":116,"importance":82,"type":121,"project":122},"Air Quality in Sofia City","2018-11-01","Nov 1, 2018","Analyzing official and citizen-measured air quality in Sofia to uncover patterns, anomalies, and weather links","https://public.tableau.com/app/profile/sofiakung/viz/SofiaAirQuality/AirQualityinSofia",{"image":115,"alt":112},"assets/airquality.png",{"keywords":117,"og_image":120},[118,119],"Visualization","Tableau","assets/fs-ml.jpg","project",{"tags":123},[118,119],"src/content/projects/air-quality.md","6a39f47d6ce15d0f",{"html":23,"metadata":127},{"headings":128,"localImagePaths":129,"remoteImagePaths":130,"frontmatter":131,"imagePaths":136},[],[],[],{"title":109,"slug":106,"date":110,"date_pretty":111,"description":112,"importance":82,"type":121,"external_link":113,"hero":132,"project":133,"seo":135},{"image":115,"alt":112},{"tags":134},[118,119],{"keywords":117,"og_image":120},[],"air-quality.md","detect-fs-fraud",{"id":138,"data":140,"body":23,"filePath":155,"digest":156,"rendered":157,"legacyId":168},{"title":141,"date":142,"date_pretty":143,"description":144,"external_link":145,"hero":146,"seo":148,"importance":60,"type":121,"project":152},"Detecting Financial Statement Fraud with ML","2020-05-01","May 1, 2020","How machine learning can detect accounting fraud","https://medium.com/data-science/detecting-firms-with-intentional-misstatements-using-machine-learning-a943191f88cf",{"image":120,"alt":147},"An article on detecting financial statrment fraud with machine learning ",{"keywords":149,"og_image":120},[150,151],"Fraud detection","Machine learning",{"tags":153},[154,150,151],"Featured","src/content/projects/detect-fs-fraud.md","5fff6a45051f77e4",{"html":23,"metadata":158},{"headings":159,"localImagePaths":160,"remoteImagePaths":161,"frontmatter":162,"imagePaths":167},[],[],[],{"title":141,"slug":138,"date":142,"date_pretty":143,"description":144,"importance":60,"type":121,"external_link":145,"hero":163,"project":164,"seo":166},{"image":120,"alt":147},{"tags":165},[154,150,151],{"keywords":149,"og_image":120},[],"detect-fs-fraud.md","visualise-spending",{"id":169,"data":171,"body":23,"filePath":222,"digest":223,"rendered":224,"legacyId":245},{"title":172,"date":173,"date_pretty":174,"description":175,"external_link":176,"hero":177,"gallery":182,"content_blocks":205,"seo":214,"importance":219,"type":121,"project":220},"Visualizing Singapore Government Spending","2019-01-01","Jan 1, 2019","Insights into how ministries and agencies spend, with visual analytics","https://wiki.smu.edu.sg/18191is428g1/GeViz",{"image":178,"alt":179,"link":180,"link_text":181},"assets/Geviz_project_cover.png","Singapore government spending dashboard showing budget allocation across ministries with interactive charts","https://is428-ay1819-geviz.shinyapps.io/Group7_GeViz/","View Live Project",{"layout":183,"columns":60,"items":184},"masonry",[185,190,195,200],{"src":186,"title":187,"alt":188,"caption":189},"assets/geviz/treemap.png","An Overview of Agency Spending within Each Ministry","Overview","Treemap chart is used here to provide a birds-eye view of each each ministry's spending breakdown by agency and category. The size of the box represents number of procurement contracts of each procurement category while the colour intensity represents the total amount of good and services procured.",{"src":191,"title":192,"alt":193,"caption":194},"assets/geviz/network.jpeg","Relationships Between Agencies and Suppliers","Breakdown","To best represent the interlinked relationship beteewen suppliers and agencies under a selected ministry, network diagram was used to shows the common suppliers between agencies. The triangle icon represents agencies while the circle icon represents suppliers.",{"src":196,"title":197,"alt":198,"caption":199},"assets/geviz/sangkey.jpeg","Main Suppliers of an Agency by Spending Category","Sankey","This sankey diagram was created with R's NetworkD3 library, the chart shows the cash flow between a selected agency and its suppliers for a selected procurement category. The thickness of the path represents the total dollar amount of goods and services procured from a particular supplier.",{"src":201,"title":202,"alt":203,"caption":204},"assets/geviz/wordcloud.jpeg","A Glimpse into Goods and Services Procured","Word cloud","This word cloud was created with R's Wordcloud2 library, it shows the top goods and services procured by a selected agency and a selected category. The size of the word within the word cloud corresponds to the frequency of the word in the procurement descriptions.",[206,209,212],{"type":207,"level":82,"text":208},"heading","Project Overview",{"type":210,"text":211},"paragraph","How do you make sense of billions in government spending? Singapore's government budget data is publicly available, but buried in dense spreadsheets. We built an interactive dashboard using R Shiny that transforms Singapore's complex budget data into clear, explorable visualizations.",{"type":210,"text":213},"Read the complete project [here](https://wiki.smu.edu.sg/18191is428g1/GeViz)",{"keywords":215,"og_image":178},[216,217,218],"Dashboard","R Shiny","Working in progress",1,{"tags":221},[154,216,217,218],"src/content/projects/visualise-spending.md","a2ed6c599f28a6c0",{"html":23,"metadata":225},{"headings":226,"localImagePaths":227,"remoteImagePaths":228,"frontmatter":229,"imagePaths":244},[],[],[],{"title":172,"slug":169,"date":173,"date_pretty":174,"description":175,"importance":219,"type":121,"external_link":176,"hero":230,"project":231,"content_blocks":233,"gallery":237,"seo":243},{"image":178,"alt":179,"link":180,"link_text":181},{"tags":232},[154,216,217,218],[234,235,236],{"type":207,"level":82,"text":208},{"type":210,"text":211},{"type":210,"text":213},{"layout":183,"columns":60,"items":238},[239,240,241,242],{"src":186,"title":187,"alt":188,"caption":189},{"src":191,"title":192,"alt":193,"caption":194},{"src":196,"title":197,"alt":198,"caption":199},{"src":201,"title":202,"alt":203,"caption":204},{"keywords":215,"og_image":178},[],"visualise-spending.md","visualise-spending-test",{"id":246,"data":248,"body":23,"filePath":268,"digest":269,"rendered":270,"legacyId":291},{"title":249,"date":173,"date_pretty":174,"description":250,"hero":251,"gallery":252,"content_blocks":258,"seo":262,"importance":264,"type":121,"project":265},"Visualizing Singapore Government Spending test page","Insights into the spending pattern of each Ministry and Agency of Singapore Government",{"image":178,"alt":179,"link":180,"link_text":181},{"layout":183,"columns":60,"items":253},[254,255,256,257],{"src":186,"title":187,"alt":188,"caption":189},{"src":191,"title":192,"alt":193,"caption":194},{"src":196,"title":197,"alt":198,"caption":199},{"src":201,"title":202,"alt":203,"caption":204},[259,260,261],{"type":207,"level":82,"text":208},{"type":210,"text":211},{"type":210,"text":213},{"keywords":263,"og_image":178},[216,217,218],99,{"tags":266},[216,217,267],"Draft","src/content/projects/visualise-spending-test.md","389ba80dce6d6b39",{"html":23,"metadata":271},{"headings":272,"localImagePaths":273,"remoteImagePaths":274,"frontmatter":275,"imagePaths":290},[],[],[],{"title":249,"slug":246,"date":173,"date_pretty":174,"description":250,"importance":264,"type":121,"hero":276,"project":277,"content_blocks":279,"gallery":283,"seo":289},{"image":178,"alt":179,"link":180,"link_text":181},{"tags":278},[216,217,267],[280,281,282],{"type":207,"level":82,"text":208},{"type":210,"text":211},{"type":210,"text":213},{"layout":183,"columns":60,"items":284},[285,286,287,288],{"src":186,"title":187,"alt":188,"caption":189},{"src":191,"title":192,"alt":193,"caption":194},{"src":196,"title":197,"alt":198,"caption":199},{"src":201,"title":202,"alt":203,"caption":204},{"keywords":263,"og_image":178},[],"visualise-spending-test.md"]