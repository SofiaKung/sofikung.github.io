---
import BaseLayout from '../layouts/BaseLayout.astro';
import { getCollection } from 'astro:content';
import { hasDraftTag } from '../utils/content';

const projectsSource = (await getCollection('projects')).filter((entry) => !hasDraftTag(entry));
const featured = projectsSource
  .filter((p) => (p.data.project?.tags || []).some((t) => String(t).toLowerCase() === 'featured'))
  .slice(0, 2);
const projects = featured.length ? featured : projectsSource.slice(0, 2);

const posts = (await getCollection('posts'))
  .filter((entry) => !hasDraftTag(entry))
  .sort((a, b) => {
    const aDate = a.data.date ? new Date(a.data.date).getTime() : 0;
    const bDate = b.data.date ? new Date(b.data.date).getTime() : 0;
    return bDate - aDate;
  })
  .slice(0, 2);
---
<BaseLayout>
  <main>
    <!-- Hero Section -->
    <section class="hero" id="home">
      <div class="container">
        <div class="hero-layout">
          <div class="hero-content">
            <h1 class="hero-name">Sofia Kung</h1>
            <div class="hero-toggle" role="tablist" aria-label="Profile focus">
              <div class="segmented-toggle mode-data" id="profile-toggle">
                <button class="seg-item active" role="tab" aria-selected="true" data-mode="data">
                  <i class="fa-solid fa-database" aria-hidden="true"></i>
                  <span>Data Analyst</span>
                </button>
                <button class="seg-item" role="tab" aria-selected="false" data-mode="risk">
                  <i class="fa-solid fa-shield-halved" aria-hidden="true"></i>
                  <span>Risk Strategist</span>
                </button>
                <span class="seg-thumb" aria-hidden="true"></span>
              </div>
            </div>

            <div class="hero-contact">
              <div class="contact-row">
                <span class="contact-label">Email:</span>
                <span class="contact-value">
                  <a href="mailto:sofiakung5@gmail.com" class="contact-email" aria-label="Email Sofia at sofiakung5@gmail.com">sofiakung5@gmail.com</a>
                </span>
              </div>
            </div>

            <div class="hero-description">
              <p id="hero-blurb">
                I’m a senior data analyst with 6+ years across tech, crypto and e‑commerce. I turn complex data into dashboards, reports and clear insights that drive product and business decisions.
              </p>
            </div>
          </div>

          <div class="hero-graphic">
            <!-- Optional: Add images to /assets/photo-*.JPG to enable deck -->
            <div class="graphic-element">
              <div class="photo-deck" id="photo-deck" aria-label="Photo gallery">
                <div class="deck-card"><img src="/assets/photo-1.JPG" alt="Photo 1" loading="lazy" /></div>
                <div class="deck-card"><img src="/assets/photo-2.JPG" alt="Photo 2" loading="lazy" /></div>
                <div class="deck-card"><img src="/assets/photo-3.JPG" alt="Photo 3" loading="lazy" /></div>
                <div class="deck-card"><img src="/assets/photo-4.JPG" alt="Photo 4" loading="lazy" /></div>
                <button id="deck-again" class="btn-again" type="button">
                  <i class="fa-solid fa-rotate-right" aria-hidden="true"></i>
                  <span>Again</span>
                </button>
              </div>
            </div>
          </div>
        </div>
      </div>
    </section>

    <section class="projects" id="projects">
      <div class="container">
        <div class="section-header">
          <h2 class="section-title">Featured Projects</h2>
          <a class="more-link" href="/projects/" aria-label="View all projects">More projects →</a>
        </div>
        <div class="project-grid">
          {projects.map(({ slug, data }) => {
            const tags = data.project?.tags ?? [];
            const external = data.external_link;
            const href = external ? external : `/project/${slug}`;
            const externalAttrs = external ? { target: '_blank', rel: 'noopener' } : {};
            const cover = data.hero?.image ?? data.image;
            const alt = data.hero?.alt ?? data.alt ?? data.title;
            return (
              <article class="project-card">
                <a class="project-link" href={href} {...externalAttrs}>
                  <div class="project-media">
                    {cover && <img src={`/${cover}`} alt={alt} loading="lazy" />}
                  </div>
                  <div class="project-body">
                    <div class="project-meta">
                      {tags.map(t => <span class="project-tag">{t}</span>)}
                    </div>
                    <h3 class="project-title">{data.title}</h3>
                    {data.description && <p class="project-desc">{data.description}</p>}
                  </div>
                </a>
              </article>
            );
          })}
        </div>
      </div>
    </section>

    <section class="posts" id="posts">
      <div class="container">
        <div class="section-header">
          <h2 class="section-title">Recent Posts</h2>
          <a class="more-link" href="/blog/" aria-label="View all posts">More posts →</a>
        </div>
        <div class="post-list">
          {posts.map(({ slug, data }) => (
            <article class="post-card">
              <a class="post-link" href={`/post/${slug}`}>
                <header class="post-header">
                  <h3 class="post-title">{data.title}</h3>
                  {data.date && <time class="post-date" datetime={data.date}>{data.date_pretty ?? data.date}</time>}
                </header>
                <p class="post-excerpt">{data.description ?? ''}</p>
                <div class="post-tags">
                  {(data.tags ?? []).map(t => <span class="post-tag">{t}</span>)}
                </div>
              </a>
            </article>
          ))}
        </div>
      </div>
    </section>

    <!-- Experience Section -->
    <section class="experience" id="resume">
      <div class="container">
        <h2 class="section-title">Professional Experience</h2>
        <div class="experience-list">
          <div class="experience-item">
            <div class="experience-period">2022 - 2024</div>
            <div class="experience-details">
              <h3 class="experience-title">Senior Risk Data Analyst</h3>
              <div class="experience-company">
                <a
                  href="https://www.binance.com/"
                  target="_blank"
                  rel="noopener"
                  >Binance</a
                >
              </div>
              <ul class="experience-description">
                <li>
                  Spearheaded end-to-end risk strategy - doubled risk coverage
                  across sub-fraud domains and increased prevention rates by 15%
                </li>
                <li>
                  Built fraud analytics infrastructure, including batch and
                  real-time feature pipelines, a centralized fraud case
                  database, reporting dashboards, and key fraud metrics.
                </li>
                <li>
                  Partnered with Data Science teams to develop ML solutions for
                  fraud detection, including association models, sequential
                  models, OCR models, and video-based detection algorithms.
                </li>
              </ul>
            </div>
          </div>

          <div class="experience-item">
            <div class="experience-period">2021 - 2022</div>
            <div class="experience-details">
              <h3 class="experience-title">Senior Risk Data Analyst</h3>
              <div class="experience-company">
                <a href="https://www.gojek.com/" target="_blank" rel="noopener"
                  >Gojek</a
                >
              </div>
              <ul class="experience-description">
                <li>
                  Uncovered risk and feature abuse through statistical analysis,
                  exploratory data analysis (EDA), and monitoring dashboards —
                  resulting in $240K in annual cost savings.
                </li>
                <li>
                  Worked closely with Operations teams to design and deploy
                  fraud detection rules targeting feature abuse, shared devices,
                  promo abuse, and fictitious rides.
                </li>
              </ul>
            </div>
          </div>

          <div class="experience-item">
            <div class="experience-period">2021</div>
            <div class="experience-details">
              <h3 class="experience-title">Product Data Analyst</h3>
              <div class="experience-company">
                <a href="https://www.atome.sg/" target="_blank" rel="noopener"
                  >Atome</a
                >
              </div>
              <ul class="experience-description">
                <li>
                  Analyzed user behavior through event logs to optimize in-app
                  flows and improve conversion rates.
                </li>
                <li>
                  Developed Tableau dashboards for app-related data analysis,
                  including funnel analysis and app performance monitoring.
                </li>
              </ul>
            </div>
          </div>

          <div class="experience-item">
            <div class="experience-period">2019 - 2021</div>
            <div class="experience-details">
              <h3 class="experience-title">Data Analyst Consultant</h3>
              <div class="experience-company">
                <a href="https://www.pwc.com/" target="_blank" rel="noopener"
                  >PwC</a
                >
              </div>
              <ul class="experience-description">
                <li>
                  Automated payment transactions for a healthcare group using
                  SQL and SSIS; independently handled requirements gathering,
                  product development, SIT/UAT testing, and deployment.
                </li>
                <li>
                  Designed Power BI dashboards for financial performance
                  monitoring.
                </li>
              </ul>
            </div>
          </div>

          <div class="experience-item">
            <div class="experience-period">2018 - 2021</div>
            <div class="experience-details">
              <h3 class="experience-title">Python Teaching Assistant</h3>
              <div class="experience-company">
                <a
                  href="https://www.hackwagon.com/"
                  target="_blank"
                  rel="noopener"
                  >Hackwagon Academy</a
                >
              </div>
              <ul class="experience-description">
                <!-- <li>Python visualization and data manipulation</li>
                <li>Machine learning instruction</li> -->
              </ul>
            </div>
          </div>

          <div class="experience-item">
            <div class="experience-period">2018</div>
            <div class="experience-details">
              <h3 class="experience-title">Data Analyst Intern</h3>
              <div class="experience-company">
                <a href="https://www.lazada.com/" target="_blank" rel="noopener"
                  >Lazada</a
                >
                /
                <a
                  href="https://www.alibabagroup.com/en-US/"
                  target="_blank"
                  rel="noopener"
                  >Alibaba</a
                >
              </div>
              <ul class="experience-description">
                <!-- <li>Dashboard development</li> -->
              </ul>
            </div>
          </div>
        </div>
      </div>
    </section>

    <!-- Skills & Technologies -->
    <section class="skills" id="skills">
      <div class="container">
        <h2 class="section-title">Skills & Technologies</h2>
        <div class="skills-grid">
          <div class="skill-category">
            <h3>Technical Skills</h3>
            <div class="skill-tags">
              <span class="skill-tag">Statistical Analysis</span>
              <span class="skill-tag">Dashboard Development</span>
              <span class="skill-tag">ETL Development</span>
              <span class="skill-tag">Machine Learning</span>
            </div>
          </div>
          <div class="skill-category">
            <h3>Programming</h3>
            <div class="skill-tags">
              <span class="skill-tag">Python</span>
              <span class="skill-tag">PySpark</span>
              <span class="skill-tag">SQL</span>
              <span class="skill-tag">R</span>
              <span class="skill-tag">JavaScript</span>
            </div>
          </div>
          <div class="skill-category">
            <h3>Risk Strategy</h3>
            <div class="skill-tags">
              <span class="skill-tag">Fraud Analytics</span>
              <span class="skill-tag">Anomaly Detection</span>
              <span class="skill-tag">Feature Abuse Detection</span>
              <span class="skill-tag">KYC/POA Fraud Detection</span>
              <span class="skill-tag">Risk Framework Design</span>
              <span class="skill-tag">Fraud Rules Development</span>
            </div>
          </div>
        </div>
      </div>
    </section>

    <!-- Let’s Connect -->
    <section class="contact" id="contact">
      <div class="container">
        <h2 class="section-title">Let’s Connect</h2>
        <p style="margin: 8px 0 16px; max-width: 60ch;">
        Open to new ideas, opportunities, and conversations.        
        </p>
 
      </div>
    </section>
  </main>
  <script is:inline>
    (function(){
      const blurb = document.getElementById('hero-blurb');
      const seg = document.getElementById('profile-toggle');
      if (!blurb || !seg) return;
      const copy = {
        data: [
      "I’m a senior data analyst with 6+ years of experience across crypto, tech, e-commerce and consulting.",
      //   "I specialize in dashboard development, statistical analysis, and metrics design—helping teams make smarter, faster, and more impactful decisions.",
      "Proven track record in designing intuitive, visually compelling dashboards, building scalable fraud prevention systems, streamlining operational workflows, and driving data-informed decisions that deliver measurable business impact.",
    ],
        risk: [
      "I specialize in connecting data analytics with risk strategy to help companies fight fraud at scale.",
      "At Binance, Gojek, and Lazada, I’ve designed fraud detection systems, developed dashboards that reveal hidden fraud patterns, and created risk frameworks that saved six figures annually.",
      "I’m driven by leading teams to strike the right balance between growth and trust & safety—delivering solutions where user experience, risk, and innovation align.",
    ],
      };
      function applyModeClass(newMode) {
        seg.classList.remove('mode-data', 'mode-risk');
        seg.classList.add(`mode-${newMode}`);
      }
      let mode = 'data';
      let idx = 0;
      let timerId = null;
      function render() {
        blurb.classList.add('fade-out');
        setTimeout(() => {
          blurb.textContent = (copy[mode] && copy[mode][idx]) || copy.data[0];
          blurb.classList.remove('fade-out');
          blurb.classList.add('fade-in');
          setTimeout(() => blurb.classList.remove('fade-in'), 220);
        }, 180);
      }
      function nextSentence() {
        const list = copy[mode] || copy.data;
        idx = (idx + 1) % list.length;
        render();
      }
      function startTimer() {
        stopTimer();
        timerId = setInterval(nextSentence, 6000);
      }
      function stopTimer() { if (timerId) clearInterval(timerId); timerId = null; }
      seg.querySelectorAll('.seg-item').forEach(btn => {
        btn.addEventListener('click', () => {
          seg.querySelectorAll('.seg-item').forEach(b => b.classList.remove('active'));
          btn.classList.add('active');
          mode = btn.getAttribute('data-mode') || 'data';
          applyModeClass(mode);
          idx = 0; render(); startTimer();
        });
      });
      // Initialize
      applyModeClass(mode);
      render(); startTimer();

      // Photo deck (swipe through 4 photos + Again button)
      const deck = document.getElementById('photo-deck');
      const againBtn = document.getElementById('deck-again');
      if (deck) {
        const initialPhotos = Array.from(deck.querySelectorAll('.deck-card img')).map((img) => ({
          src: img.getAttribute('src'),
          alt: img.getAttribute('alt') || 'Photo',
        }));
        let startX=0, startY=0, dx=0, dy=0, dragging=false, topCard=null, activePointerId=null;

        function cards() { return Array.from(deck.querySelectorAll('.deck-card')); }

        function createCard(photo) {
          const card = document.createElement('div');
          card.className = 'deck-card';
          const img = document.createElement('img');
          img.src = photo.src || '';
          img.alt = photo.alt || 'Photo';
          img.loading = 'lazy';
          img.setAttribute('draggable', 'false');
          card.appendChild(img);
          return card;
        }

        function setDeckHeight() {
          const firstImg = deck.querySelector('.deck-card img');
          if (!firstImg) return;
          const h = firstImg.complete ? firstImg.clientHeight : 0;
          if (h) deck.style.height = `${h}px`;
          else firstImg.addEventListener('load', () => { deck.style.height = `${firstImg.clientHeight}px`; }, { once: true });
        }

        function layoutDeck() {
          const cs = cards();
          cs.forEach((c, i) => {
            c.classList.toggle('top', i === 0);
            const angle = i === 0 ? 0 : (i % 2 === 0 ? 3 : -3);
            c.style.transform = `translateY(${i * 8}px) scale(${1 - i * 0.03}) rotate(${angle}deg)`;
            c.style.zIndex = String(1000 - i);
            c.style.transition = 'transform .25s ease, opacity .25s ease';
          });
          setDeckHeight();
          if (againBtn) againBtn.hidden = cs.length !== 0; // show when empty
        }

        function restoreDeck() {
          const button = againBtn && againBtn.parentElement === deck ? againBtn : null;
          deck.querySelectorAll('.deck-card').forEach((card) => card.remove());
          initialPhotos.forEach((photo) => {
            const card = createCard(photo);
            if (button) deck.insertBefore(card, button);
            else deck.appendChild(card);
          });
          layoutDeck();
          dragging = false;
          activePointerId = null;
          dx = dy = 0;
          topCard = null;
          deck.classList.remove('dragging');
        }

        function onPointerDown(e) {
          topCard = deck.querySelector('.deck-card.top');
          if (!topCard) return;
          e.preventDefault();
          dragging = true; dx = 0; dy = 0;
          startX = e.clientX || (e.touches && e.touches[0]?.clientX) || 0;
          startY = e.clientY || (e.touches && e.touches[0]?.clientY) || 0;
          activePointerId = e.pointerId != null ? e.pointerId : null;
          try { if (activePointerId != null && topCard.setPointerCapture) topCard.setPointerCapture(activePointerId); } catch{}
          topCard.style.transition = 'none';
          document.addEventListener('pointermove', onPointerMove, { passive: true });
          document.addEventListener('pointerup', onPointerUp, { once: true });
          document.addEventListener('pointercancel', onPointerUp, { once: true });
        }
        function onPointerMove(e) {
          if (!dragging || !topCard) return;
          const x = e.clientX || (e.touches && e.touches[0]?.clientX) || startX;
          const y = e.clientY || (e.touches && e.touches[0]?.clientY) || startY;
          dx = x - startX; dy = (y - startY) * 0.3;
          const w = deck.clientWidth || (topCard.getBoundingClientRect().width || 300);
          const p = Math.max(-1, Math.min(1, dx / (w * 0.6)));
          const rot = p * 12;
          const opacity = 1 - Math.min(1, Math.abs(p)) * 0.7;
          topCard.style.transform = `translate(${dx}px, ${dy}px) rotate(${rot}deg)`;
          topCard.style.opacity = String(opacity);
        }
        function onPointerUp() {
          if (!topCard) return;
          const currentCard = topCard;
          dragging = false;
          try { if (activePointerId != null && currentCard.releasePointerCapture) currentCard.releasePointerCapture(activePointerId); } catch{}
          const rect = currentCard.getBoundingClientRect();
          const w = deck.clientWidth || rect.width;
          const threshold = Math.min(120, rect.width * 0.25);
          const shouldDismiss = Math.abs(dx) > threshold;
          const spring = 'cubic-bezier(0.175, 0.885, 0.32, 1.275)';
          currentCard.style.transition = `transform .25s ${spring}, opacity .25s ease`;
          if (shouldDismiss) {
            const dir = Math.sign(dx) || 1;
            const y = dy;
            currentCard.style.transform = `translate(${dir * w * 1.2}px, ${y}px) rotate(${dir * 30}deg)`;
            currentCard.style.opacity = '0';
            currentCard.addEventListener('transitionend', () => {
              if (currentCard.parentElement === deck) currentCard.remove();
              layoutDeck();
            }, { once: true });
          } else {
            currentCard.style.transform = 'translate(0,0) rotate(0deg)';
            currentCard.style.opacity = '1';
            currentCard.addEventListener('transitionend', () => {
              currentCard.style.transition = 'none';
            }, { once: true });
          }
          dx = dy = 0; topCard = null; deck.classList.remove('dragging');
          document.removeEventListener('pointermove', onPointerMove);
          document.removeEventListener('pointercancel', onPointerUp);
        }
        deck.querySelectorAll('.deck-card img').forEach((img) => img.setAttribute('draggable', 'false'));
        deck.addEventListener('pointerdown', (e) => {
          if (!(e.target && e.target.closest('.deck-card'))) return;
          deck.classList.add('dragging');
          onPointerDown(e);
        });
        layoutDeck();
        if (againBtn) againBtn.addEventListener('click', restoreDeck);
      }
    })();
  </script>
</BaseLayout>
